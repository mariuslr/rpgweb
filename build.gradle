plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.50'
}

group 'com.smeup'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://jitpack.io' }
}

dependencies {
    compile 'io.javalin:javalin:3.6.0'
    compile "org.slf4j:slf4j-api:1.8.0-beta4"
    compile "org.slf4j:slf4j-simple:1.8.0-beta4"
    compile 'com.google.code.gson:gson:2.8.6'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile 'org.hsqldb:hsqldb:2.5.0'
    compile 'com.github.smeup.jariko:rpgJavaInterpreter-core:v0.1.2'
    //compile 'com.github.smeup.smeup-rpg:rpgJavaInterpreter-core:v0.1.1-beta.0'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

//gradlew run -Pargs="example_arg1,example_arg2...."
task run (type: JavaExec) {
    if (project.hasProperty('programArgs')){
        args(project.getProperties().get("programArgs").split(','))
    }
    main="com.smeup.rpgweb.AppKt"
    classpath = sourceSets.test.runtimeClasspath
}

task cleanDB(type: Delete) {
    delete 'testDB'
}

task createDB (type: JavaExec) {
    main="com.smeup.rpgweb.db.CreateDB"
    classpath = sourceSets.test.runtimeClasspath
}

task startDBEngine (type: JavaExec) {
    main="org.hsqldb.Server"
    args("-database.0", "file:testDB/testDB", "-dbname.0", "testDB")
    classpath = sourceSets.test.runtimeClasspath
}

task shutdownDBEngine (type: JavaExec) {
    main="com.smeup.rpgweb.db.ShutDownDB"
    classpath = sourceSets.test.runtimeClasspath
}


task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'com.smeup.rpgweb.AppKt'
    }
    archiveBaseName = project.name + '-all'
    archiveVersion = ''
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
